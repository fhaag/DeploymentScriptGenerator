//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Deployment.CodePlex.Web
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.4.2.9749-39bf891c")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReleaseServiceSoap", Namespace="http://www.codeplex.com/services/ReleaseService/v1.0")]
    public partial class ReleaseService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {
        
        /// <remarks/>
        public ReleaseService()
        {
            this.Url = "https://www.codeplex.com/Services/ReleaseService.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.codeplex.com/services/ReleaseService/v1.0/CreateProjectRelease", RequestNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", ResponseNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateProjectRelease(string projectName, string name, string description, string releaseDate, string status, bool showToPublic, bool isDefaultRelease, string username, string password, string changesetId)
        {
            object[] results = this.Invoke("CreateProjectRelease", new object[] {
                        projectName,
                        name,
                        description,
                        releaseDate,
                        status,
                        showToPublic,
                        isDefaultRelease,
                        username,
                        password,
                        changesetId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateProjectRelease(string projectName, string name, string description, string releaseDate, string status, bool showToPublic, bool isDefaultRelease, string username, string password, string changesetId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CreateProjectRelease", new object[] {
                        projectName,
                        name,
                        description,
                        releaseDate,
                        status,
                        showToPublic,
                        isDefaultRelease,
                        username,
                        password,
                        changesetId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateProjectRelease(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.codeplex.com/services/ReleaseService/v1.0/CreateARelease", RequestNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", ResponseNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateARelease(string projectName, string name, string description, string releaseDate, string status, bool showToPublic, bool isDefaultRelease, string username, string password)
        {
            object[] results = this.Invoke("CreateARelease", new object[] {
                        projectName,
                        name,
                        description,
                        releaseDate,
                        status,
                        showToPublic,
                        isDefaultRelease,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateARelease(string projectName, string name, string description, string releaseDate, string status, bool showToPublic, bool isDefaultRelease, string username, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CreateARelease", new object[] {
                        projectName,
                        name,
                        description,
                        releaseDate,
                        status,
                        showToPublic,
                        isDefaultRelease,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateARelease(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.codeplex.com/services/ReleaseService/v1.0/CreateRelease", RequestNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", ResponseNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateRelease(string projectName, string name, string description, string releaseDate, string status, bool showToPublic, bool showOnHomePage, bool isDefaultRelease, string username, string password)
        {
            object[] results = this.Invoke("CreateRelease", new object[] {
                        projectName,
                        name,
                        description,
                        releaseDate,
                        status,
                        showToPublic,
                        showOnHomePage,
                        isDefaultRelease,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateRelease(string projectName, string name, string description, string releaseDate, string status, bool showToPublic, bool showOnHomePage, bool isDefaultRelease, string username, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CreateRelease", new object[] {
                        projectName,
                        name,
                        description,
                        releaseDate,
                        status,
                        showToPublic,
                        showOnHomePage,
                        isDefaultRelease,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateRelease(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.codeplex.com/services/ReleaseService/v1.0/CreateClickOnceRelease", RequestNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", ResponseNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateClickOnceRelease(string projectName, string name, string description, string releaseDate, string status, bool isDefaultRelease, string changesetId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] clickOnceFileBytes, string username, string password)
        {
            object[] results = this.Invoke("CreateClickOnceRelease", new object[] {
                        projectName,
                        name,
                        description,
                        releaseDate,
                        status,
                        isDefaultRelease,
                        changesetId,
                        clickOnceFileBytes,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateClickOnceRelease(string projectName, string name, string description, string releaseDate, string status, bool isDefaultRelease, string changesetId, byte[] clickOnceFileBytes, string username, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CreateClickOnceRelease", new object[] {
                        projectName,
                        name,
                        description,
                        releaseDate,
                        status,
                        isDefaultRelease,
                        changesetId,
                        clickOnceFileBytes,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateClickOnceRelease(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.codeplex.com/services/ReleaseService/v1.0/UpdateRelease", RequestNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", ResponseNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateRelease(string projectName, int releaseId, string name, string description, string releaseDate, string status, bool showToPublic, bool isDefaultRelease, string changeSetId, string username, string password)
        {
            this.Invoke("UpdateRelease", new object[] {
                        projectName,
                        releaseId,
                        name,
                        description,
                        releaseDate,
                        status,
                        showToPublic,
                        isDefaultRelease,
                        changeSetId,
                        username,
                        password});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateRelease(string projectName, int releaseId, string name, string description, string releaseDate, string status, bool showToPublic, bool isDefaultRelease, string changeSetId, string username, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateRelease", new object[] {
                        projectName,
                        releaseId,
                        name,
                        description,
                        releaseDate,
                        status,
                        showToPublic,
                        isDefaultRelease,
                        changeSetId,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateRelease(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.codeplex.com/services/ReleaseService/v1.0/UpdateClickOnceRelease", RequestNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", ResponseNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateClickOnceRelease(string projectName, int releaseId, string name, string description, string releaseDate, string status, bool isDefaultRelease, string changeSetId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] clickOnceFileBytes, string username, string password)
        {
            this.Invoke("UpdateClickOnceRelease", new object[] {
                        projectName,
                        releaseId,
                        name,
                        description,
                        releaseDate,
                        status,
                        isDefaultRelease,
                        changeSetId,
                        clickOnceFileBytes,
                        username,
                        password});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateClickOnceRelease(string projectName, int releaseId, string name, string description, string releaseDate, string status, bool isDefaultRelease, string changeSetId, byte[] clickOnceFileBytes, string username, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateClickOnceRelease", new object[] {
                        projectName,
                        releaseId,
                        name,
                        description,
                        releaseDate,
                        status,
                        isDefaultRelease,
                        changeSetId,
                        clickOnceFileBytes,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateClickOnceRelease(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.codeplex.com/services/ReleaseService/v1.0/UploadReleaseFiles", RequestNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", ResponseNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadReleaseFiles(string projectName, string releaseName, ReleaseFile[] files, string username, string password)
        {
            this.Invoke("UploadReleaseFiles", new object[] {
                        projectName,
                        releaseName,
                        files,
                        username,
                        password});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadReleaseFiles(string projectName, string releaseName, ReleaseFile[] files, string username, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UploadReleaseFiles", new object[] {
                        projectName,
                        releaseName,
                        files,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUploadReleaseFiles(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.codeplex.com/services/ReleaseService/v1.0/UploadTheReleaseFiles", RequestNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", ResponseNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadTheReleaseFiles(string projectName, string releaseName, ReleaseFile[] files, string recommendedFileName, string username, string password)
        {
            this.Invoke("UploadTheReleaseFiles", new object[] {
                        projectName,
                        releaseName,
                        files,
                        recommendedFileName,
                        username,
                        password});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadTheReleaseFiles(string projectName, string releaseName, ReleaseFile[] files, string recommendedFileName, string username, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UploadTheReleaseFiles", new object[] {
                        projectName,
                        releaseName,
                        files,
                        recommendedFileName,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUploadTheReleaseFiles(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.codeplex.com/services/ReleaseService/v1.0/GetRelease", RequestNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", ResponseNamespace="http://www.codeplex.com/services/ReleaseService/v1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Release GetRelease(string projectName, string releaseName, string username, string password)
        {
            object[] results = this.Invoke("GetRelease", new object[] {
                        projectName,
                        releaseName,
                        username,
                        password});
            return ((Release)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRelease(string projectName, string releaseName, string username, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRelease", new object[] {
                        projectName,
                        releaseName,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public Release EndGetRelease(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Release)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.4.2.9749-39bf891c")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.codeplex.com/services/ReleaseService/v1.0")]
    public partial class ReleaseFile
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileData;
        
        /// <remarks/>
        public string FileName;
        
        /// <remarks/>
        public string FileType;
        
        /// <remarks/>
        public string MimeType;
        
        /// <remarks/>
        public string Name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.4.2.9749-39bf891c")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.codeplex.com/services/ReleaseService/v1.0")]
    public partial class Release
    {
        
        /// <remarks/>
        public int Id;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReleaseDate;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public bool ShowToPublic;
        
        /// <remarks/>
        public bool DefaultRelease;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ModifiedDate;
        
        /// <remarks/>
        public string ModifiedByUserName;
        
        /// <remarks/>
        public string DevelopmentStatus;
        
        /// <remarks/>
        public string ChangesetId;
        
        /// <remarks/>
        public bool IsClickOnceRelease;
        
        /// <remarks/>
        public bool IsArchived;
    }
}
